-- Table: public.application_user

-- DROP TABLE public.application_user;

CREATE TABLE public.application_user
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    apellido character varying(255) COLLATE pg_catalog."default",
    dni character varying(255) COLLATE pg_catalog."default",
    mail character varying(255) COLLATE pg_catalog."default",
    nombre character varying(255) COLLATE pg_catalog."default",
    password character varying(255) COLLATE pg_catalog."default",
    tipo_usuario integer,
    username character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT application_user_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public.application_user
    OWNER to postgres;


-- Table: public.license_holder

-- DROP TABLE public.license_holder;

CREATE TABLE public.license_holder
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    apellido character varying(255) COLLATE pg_catalog."default",
    domicilio character varying(255) COLLATE pg_catalog."default",
    factor_rh integer,
    fecha_nacimiento date,
    grupo_sanguineo integer,
    nombre character varying(255) COLLATE pg_catalog."default",
    nro_documento integer,
    tipo_licencia integer,
    CONSTRAINT license_holder_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public.license_holder
    OWNER to postgres;
	
-- Table: public.spring_session

-- DROP TABLE public.spring_session;

CREATE TABLE public.spring_session
(
    primary_id character(36) COLLATE pg_catalog."default" NOT NULL,
    session_id character(36) COLLATE pg_catalog."default" NOT NULL,
    creation_time bigint NOT NULL,
    last_access_time bigint NOT NULL,
    max_inactive_interval integer NOT NULL,
    expiry_time bigint NOT NULL,
    principal_name character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT spring_session_pk PRIMARY KEY (primary_id)
)

TABLESPACE pg_default;

ALTER TABLE public.spring_session
    OWNER to postgres;
-- Index: spring_session_ix1

-- DROP INDEX public.spring_session_ix1;

CREATE UNIQUE INDEX spring_session_ix1
    ON public.spring_session USING btree
    (session_id COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: spring_session_ix2

-- DROP INDEX public.spring_session_ix2;

CREATE INDEX spring_session_ix2
    ON public.spring_session USING btree
    (expiry_time ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: spring_session_ix3

-- DROP INDEX public.spring_session_ix3;

CREATE INDEX spring_session_ix3
    ON public.spring_session USING btree
    (principal_name COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
	
	
-- Table: public.spring_session_attributes

-- DROP TABLE public.spring_session_attributes;

CREATE TABLE public.spring_session_attributes
(
    session_primary_id character(36) COLLATE pg_catalog."default" NOT NULL,
    attribute_name character varying(200) COLLATE pg_catalog."default" NOT NULL,
    attribute_bytes bytea NOT NULL,
    CONSTRAINT spring_session_attributes_pk PRIMARY KEY (session_primary_id, attribute_name),
    CONSTRAINT spring_session_attributes_fk FOREIGN KEY (session_primary_id)
        REFERENCES public.spring_session (primary_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE public.spring_session_attributes
    OWNER to postgres;